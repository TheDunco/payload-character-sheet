/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    'fifth-edition-character': FifthEditionCharacter;
    media: Media;
  };
  globals: {};
}
export interface User {
  id: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
  password?: string;
}
export interface FifthEditionCharacter {
  id: string;
  name?: string;
  users?: string[] | User[];
  pictures?: string[] | Media[];
  character: {
    overallLevel: number;
    xp?: number;
    proficiencyBonus?: number;
    armorClass?: number;
    speed?: number;
    inspiration?: boolean;
    classes: {
      class?:
        | 'artificer'
        | 'barbarian'
        | 'bard'
        | 'blood-hunter'
        | 'cleric'
        | 'druid'
        | 'fighter'
        | 'monk'
        | 'paladin'
        | 'ranger'
        | 'rogue'
        | 'sorcerer'
        | 'warlock'
        | 'wizard'
        | 'custom';
      levels?: number;
      id?: string;
    }[];
    alignment?:
      | 'lawful-good'
      | 'neutral-good'
      | 'chaotic-good'
      | 'lawful-neutral'
      | 'true-neutral'
      | 'chaotic-neutral'
      | 'lawful-evil'
      | 'neutral-evil'
      | 'chaotic-evil';
    background?:
      | 'acolyte'
      | 'anthropologist'
      | 'archaeologist'
      | 'athlete'
      | 'charlatan'
      | 'city-watch'
      | 'clan-crafter'
      | 'cloistered-scholar'
      | 'courtier'
      | 'criminal'
      | 'entertainer'
      | 'faceless'
      | 'faction-agent'
      | 'far-traveler'
      | 'feylost'
      | 'fisher'
      | 'folk-hero'
      | 'gladiator'
      | 'guild-artisan'
      | 'guild-merchant'
      | 'haunted-one'
      | 'hermit'
      | 'house-agent'
      | 'inheritor'
      | 'investigator-(scag)'
      | 'investigator-(vrgr)'
      | 'knight'
      | 'knight-of-the-order'
      | 'marine'
      | 'mercenary-veteran'
      | 'noble'
      | 'outlander'
      | 'pirate'
      | 'sage'
      | 'sailor'
      | 'shipwright'
      | 'smuggler'
      | 'soldier'
      | 'spy'
      | 'urban-bounty-hunter'
      | 'urchin'
      | 'uthgardt-tribe-member'
      | 'waterdhavian-noble'
      | 'witchlight-hand'
      | 'black-fist-double-agent'
      | 'dragon-casualty'
      | 'iron-route-bandit'
      | 'phlan-insurgent'
      | 'stojanow-prisoner'
      | 'ticklebelly-nomad'
      | 'caravan-specialist'
      | 'earthspur-miner'
      | 'harborfolk'
      | 'mulmaster-aristocrat'
      | 'phlan-refugee'
      | 'cormanthor-refugee'
      | 'gate-urchin'
      | 'hillsfar-merchant'
      | 'hillsfar-smuggler'
      | 'secret-identity'
      | 'shade-fanatic'
      | 'trade-sheriff'
      | 'gate-warden'
      | 'giant-foundling'
      | 'knight-of-solamnia'
      | 'mage-of-high-sorcery'
      | 'planar-philosopher'
      | 'rune-carver'
      | 'ashari'
      | "celebrity-adventurer's-scion"
      | 'failed-merchant'
      | 'gambler'
      | 'plaintiff'
      | 'rival-intern'
      | 'dissenter'
      | 'initiate'
      | 'vizier'
      | 'inquisitor'
      | 'azorius-functionary'
      | 'boros-legionnaire'
      | 'dimir-operative'
      | 'golgari-agent'
      | 'gruul-anarch'
      | 'izzet-engineer'
      | 'orzhov-representative'
      | 'rakdos-cultist'
      | 'selesnya-initiate'
      | 'simic-scientist'
      | 'lorehold-student'
      | 'prismari-student'
      | 'quandrix-student'
      | 'silverquill-student'
      | 'witherbloom-student'
      | 'grinner'
      | 'volstrucker-agent'
      | 'astral-drifter'
      | 'wildspacer';
    age?: number;
    height?: string;
    weight?: string;
    size?: 'tiny' | 'small' | 'medium' | 'large' | 'huge' | 'gargantuan';
    eyes?: string;
    hair?: string;
    skin?: string;
    clothes?: string;
    other?: {
      [k: string]: unknown;
    }[];
    languages?: string;
    proficiencies?: string;
  };
  AbilityScoresAndSkills: {
    abilityScores: {
      intelligence?: number;
      wisdom?: number;
      charisma?: number;
      dexterity?: number;
      strength?: number;
      constitution?: number;
    };
    intelligenceSkills: {
      arcana: {
        proficient?: boolean;
        bonus?: number;
      };
      history: {
        proficient?: boolean;
        bonus?: number;
      };
      investigation: {
        proficient?: boolean;
        bonus?: number;
      };
      nature: {
        proficient?: boolean;
        bonus?: number;
      };
      religion: {
        proficient?: boolean;
        bonus?: number;
      };
    };
    wisdomSkills: {
      animalHandling: {
        proficient?: boolean;
        bonus?: number;
      };
      insight: {
        proficient?: boolean;
        bonus?: number;
      };
      medicine: {
        proficient?: boolean;
        bonus?: number;
      };
      perception: {
        proficient?: boolean;
        bonus?: number;
      };
      survival: {
        proficient?: boolean;
        bonus?: number;
      };
    };
    charismaSkills: {
      deception: {
        proficient?: boolean;
        bonus?: number;
      };
      intimidation: {
        proficient?: boolean;
        bonus?: number;
      };
      performance: {
        proficient?: boolean;
        bonus?: number;
      };
      persuasion: {
        proficient?: boolean;
        bonus?: number;
      };
    };
    dexteritySkills: {
      acrobatics: {
        proficient?: boolean;
        bonus?: number;
      };
      sleightOfHand: {
        proficient?: boolean;
        bonus?: number;
      };
      stealth: {
        proficient?: boolean;
        bonus?: number;
      };
    };
  };
  combat: {
    health: {
      currentHitPoints?: number;
      maxHitPoints?: number;
      temporaryHitPoints?: number;
      hitDice: {
        dieType?: 'd4' | 'd6' | 'd8' | 'd10' | 'd12' | 'd20';
        currentHitDice?: number;
      };
      deathSaves: {
        deathSavesSuccesses?: number;
        deathSavesFailures?: number;
      };
    };
    proficiency: {
      castingAbility?: 'intelligence' | 'wisdom' | 'charisma' | 'strength' | 'dexterity' | 'constitution';
      proficiencyBonus?: number;
      attackBonus?: number;
      saveDC?: number;
      id?: string;
    }[];
    spellSlots: {
      spellSlotLevel?: 'cantrip' | '1st' | '2nd' | '3rd' | '4th' | '5th' | '6th' | '7th' | '8th' | '9th';
      currentSpellSlots?: number;
      maxSpellSlots?: number;
      id?: string;
    }[];
    spells: {
      name?: string;
      school?:
        | 'abjuration'
        | 'conjuration'
        | 'divination'
        | 'enchantment'
        | 'evocation'
        | 'illusion'
        | 'necromancy'
        | 'transmutation'
        | 'dunamancy'
        | 'other';
      description?: {
        [k: string]: unknown;
      }[];
      castingTime?: string;
      range?: string;
      components?: string;
      duration?: string;
      level?: number;
      id?: string;
    }[];
    defenses: {
      defenseType?: 'heavy-armor' | 'medium-armor' | 'light-armor' | 'natural-armor' | 'shield' | 'misc';
      base?: number;
      bonus?: number;
      magical?: boolean;
      magicalBonus?: number;
      id?: string;
    }[];
  };
  createdAt: string;
  updatedAt: string;
}
export interface Media {
  id: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    thumbnail: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    card: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    tablet: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
}
